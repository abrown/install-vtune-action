name: 'Install VTune'
description: 'Install the VTune binaries on a GitHub runner'

# See https://docs.github.com/en/actions/creating-actions/metadata-syntax-for-github-actions#inputs
inputs:
  env:
    description: 'Run the VTune setup script to configure the environment'
    default: true
  script:
    description: 'The script to run to install VTune'
    default: 'l_oneapi_vtune_p_2023.2.0.49485_offline.sh'
  sha384:
    description: 'The SHA384 checksum of the installation script'
    default: '43431383783e8a204f67f5f6719f74becb8e3c97862661b20b56c2c5d87c529d103a1493779565b4bbb3f372092c1b6b'

runs:
  using: composite
  steps:
  - name: Only allow Linux runners
    run: |
      echo "This action currently only works on Linux runners"
      exit 1
    shell: bash
    if: ${{ !startsWith(runner.os, 'linux') }}

  # Cache the installer script; note that we must give a non-relative path (e.g., the canonicalized
  # VTUNE_INSTALL_SCRIPT) to the caching action.
  - name: Canonicalize script path
    run: |
      echo VTUNE_INSTALL_SCRIPT=$(realpath ${{ github.action_path }}${{ inputs.script }}) >> $GITHUB_ENV
    shell: bash
  - name: Cache artifacts
    uses: actions/cache@v3
    with:
      path: ${{ env.VTUNE_INSTALL_SCRIPT }}
      key: vtune-${{ inputs.script }}

  # Run the VTune installer; `install.sh` is smart enough to avoid re-downloading the ~570MB VTune
  # installer if it can find it in the current directory.
  - name: Install
    run: ./install.sh ${{ inputs.script }} ${{ inputs.sha384 }}
    shell: bash
    working-directory: ${{ github.action_path }}

  # Configure the GitHub runner.
  - name: Setup environment
    run: |
      source $HOME/intel/oneapi/setvars.sh
      echo ACCEPT_EULA=$ACCEPT_EULA >> $GITHUB_ENV
      echo ONEAPI_ROOT=$ONEAPI_ROOT >> $GITHUB_ENV
      echo PKG_CONFIG_PATH=$PKG_CONFIG_PATH >> $GITHUB_ENV
      echo VTUNE_PROFILER_2023_DIR=$VTUNE_PROFILER_2023_DIR >> $GITHUB_ENV
      echo VTUNE_PROFILER_DIR=$VTUNE_PROFILER_DIR >> $GITHUB_ENV
      echo $VTUNE_PROFILER_DIR/bin64 >> $GITHUB_PATH
    shell: bash
    if: ${{ inputs.env == 'true' }}
  - name: Setup kernel
    run: sudo sysctl kernel.yama.ptrace_scope=0
    shell: bash
    if: ${{ inputs.env == 'true' }}
