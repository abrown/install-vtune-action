name: 'Install VTune'
description: 'Install the VTune binaries on a GitHub runner'

# The Intel VTune download site has instructions (below the fold) for downloading an "offline
# installer" script as well as its SHA384 checksum. To update the default version of VTune, navigate
# to:
# https://www.intel.com/content/www/us/en/developer/tools/oneapi/vtune-profiler-download.html?operatingsystem=linux&distributions=offline.
inputs:
  url:
    description: 'The location of the VTune installation script'
    default: 'https://registrationcenter-download.intel.com/akdlm/IRC_NAS/d703d28b-d70b-4c90-bdb1-c3562c1084e5/l_oneapi_vtune_p_2024.2.1.68_offline.sh'
  sha384:
    description: 'The SHA-384 hash of the VTune installation script'
    default: 'd8c46ac17d0ae16ad69a52c772569a3ea43f4772c292e5134cf7853d1cceef38955eea3b35ba839e5b669d266a2ea415'
  env:
    description: 'Run the VTune setup script to configure the runner environment'
    default: true

runs:
  using: composite
  steps:
  - name: Only allow Linux runners
    run: |
      echo "this action currently only works on Linux runners"
      exit 1
    shell: bash
    working-directory: ${{ github.action_path }}
    if: ${{ !startsWith(runner.os, 'linux') }}

  # Cache the entire VTune installation directory; use a prefix of the SHA-384 hash to make the
  # cache key unique.
  - name: Calculate cache ID
    run: echo VTUNE_ID=$(echo "${{ inputs.sha384 }}" | cut -c1-7) >> $GITHUB_ENV
    shell: bash
  - name: Cache artifacts
    id: cache-vtune-installation
    uses: actions/cache@v3
    with:
      path: /home/runner/intel/oneapi
      key: vtune-${{ env.VTUNE_ID }}

  # Download and install only on cache miss.
  - if: ${{ steps.cache-vtune-installation.outputs.cache-hit != 'true' }}
    name: Install
    run: ./install.sh ${{ inputs.url }} ${{ inputs.sha384 }}
    shell: bash
    working-directory: ${{ github.action_path }}

  # Configure the GitHub runner.
  - name: Setup environment
    run: |
      source $HOME/intel/oneapi/setvars.sh
      echo ACCEPT_EULA=$ACCEPT_EULA >> $GITHUB_ENV
      echo ONEAPI_ROOT=$ONEAPI_ROOT >> $GITHUB_ENV
      echo PKG_CONFIG_PATH=$PKG_CONFIG_PATH >> $GITHUB_ENV
      echo VTUNE_PROFILER_2023_DIR=$VTUNE_PROFILER_2023_DIR >> $GITHUB_ENV
      echo VTUNE_PROFILER_DIR=$VTUNE_PROFILER_DIR >> $GITHUB_ENV
      echo $VTUNE_PROFILER_DIR/bin64 >> $GITHUB_PATH
    shell: bash
    if: ${{ inputs.env == 'true' }}
  - name: Setup kernel
    run: sudo sysctl kernel.yama.ptrace_scope=0
    shell: bash
    if: ${{ inputs.env == 'true' }}
